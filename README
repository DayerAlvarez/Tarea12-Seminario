# 💰 Sistema de Préstamos Web

---

## 📋 Descripción

Sistema completo para la gestión de préstamos que permite administrar beneficiarios, contratos y pagos de cuotas de manera eficiente.

---

## 📁 Estructura del Proyecto

```
prestamos-web/
├── app/
│   ├── controllers/
│   │   ├── beneficiario.controller.php
│   │   ├── contrato.controller.php
│   │   └── pago.controller.php
│   └── models/
│       ├── Beneficiario.php
│       ├── Conexion.php
│       ├── Contrato.php
│       └── Pago.php
├── database/
├── public/
│   ├── css/
│   │   ├── beneficiario.css
│   │   ├── contrato.css
│   │   ├── main.css
│   │   └── pago.css
│   ├── js/
│   │   ├── beneficiario.js
│   │   ├── contrato.js
│   │   └── pago.js
│   └── views/
│       ├── Beneficiario/
│       │   └── registraryListar.php
│       ├── Contrato/
│       │   └── registraryListar.php
│       └── Pago/
│           └── listar.php
├── .gitignore
├── index.php
├── package-lock.json
├── package.json
└── README.md
```

---

## 🗄️ Base de Datos

La base de datos `prestamos` contiene las siguientes tablas:

| Tabla | Descripción |
|-------|-------------|
| **beneficiarios** | Información de clientes (apellidos, nombres, DNI, teléfono, dirección) |
| **contratos** | Datos de préstamos (beneficiario, monto, interés, fechas, estado) |
| **pagos** | Registro de cuotas y pagos (contrato, número de cuota, monto, penalidad) |

---

## 🧩 Componentes del Sistema

### 📊 Modelos (`app/models/`)

* **✨ Conexion.php**
  * Establece la conexión PDO a la base de datos MySQL
  * Gestiona errores de conexión

* **👤 Beneficiario.php**
  * Operaciones CRUD para beneficiarios
  * Validaciones para DNI (8 dígitos) y teléfono (9 dígitos)
  * Búsqueda de beneficiarios por diferentes criterios

* **📝 Contrato.php**
  * Creación y gestión de contratos de préstamo
  * Cálculo automático de cuotas con sistema de amortización
  * Generación de cronogramas de pago
  * Control de contratos activos por beneficiario

* **💳 Pago.php**
  * Registro de pagos de cuotas
  * Cálculo automático de penalidades (10%)
  * Obtención de cuotas pendientes y pagadas

### 🎮 Controladores (`app/controllers/`)

* **👥 beneficiario.controller.php**
  * Procesa formularios de beneficiarios
  * Valida datos de entrada
  * Maneja peticiones AJAX para búsquedas

* **📋 contrato.controller.php**
  * Gestiona creación y finalización de contratos
  * Genera cronogramas de pago
  * Busca beneficiarios por DNI para asociar contratos

* **💲 pago.controller.php**
  * Registra pagos con cálculo de penalidades
  * Busca contratos activos por DNI
  * Obtiene cuotas pendientes para pagos

### 🖥️ Vistas (`public/views/`)

* **Beneficiario/registraryListar.php**
  * Formulario de registro de beneficiarios
  * Listado de beneficiarios existentes
  * Modal para edición de datos

* **Contrato/registraryListar.php**
  * Formulario para crear contratos
  * Listado de contratos existentes
  * Modal para visualizar cronograma de pagos

* **Pago/listar.php**
  * Interfaz para registrar pagos
  * Historial de pagos realizados
  * Búsqueda de contratos por DNI

### 🎨 Estilos CSS (`public/css/`)

* **main.css**: Estilos globales del sistema (tablas, formularios, modales)
* **beneficiario.css**: Estilos específicos para sección de beneficiarios
* **contrato.css**: Estilos para contratos y cronogramas
* **pago.css**: Estilos para la sección de pagos

### 📱 JavaScript (`public/js/`)

* **beneficiario.js**: Validación de formularios y manejo de modales
* **contrato.js**: Búsqueda de beneficiarios, cálculo de préstamos y visualización de cronogramas
* **pago.js**: Registro de pagos y búsqueda de contratos por DNI

### 🚪 Punto de entrada (`index.php`)

* Actúa como controlador frontal
* Procesa solicitudes y redirecciona según la sección seleccionada
* Carga los controladores correspondientes
* Muestra la interfaz principal del sistema

---

## ⚙️ Funcionalidades

### 👥 Módulo de Beneficiarios

* ✅ Registro de beneficiarios con validación de DNI y teléfono
* ✅ Listado de beneficiarios existentes
* ✅ Edición y eliminación de beneficiarios
* ✅ Validación en tiempo real de datos de entrada

### 📝 Módulo de Contratos

* ✅ Creación de contratos asociados a beneficiarios
* ✅ Configuración de montos, intereses, plazos y fechas de pago
* ✅ Visualización de cronograma de pagos
* ✅ Control de un contrato activo por beneficiario
* ✅ Cálculo automático de cuotas mensuales

### 💰 Módulo de Pagos

* ✅ Registro de pagos de cuotas
* ✅ Aplicación automática de penalidades por pagos tardíos
* ✅ Soporte para diferentes medios de pago (efectivo, depósito)
* ✅ Historial de pagos realizados

---

## 🛠️ Características técnicas

* ✅ Implementación del patrón MVC
* ✅ Validación de datos en servidor y cliente
* ✅ Conexión a base de datos mediante PDO
* ✅ Interfaz responsiva con CSS personalizado
* ✅ Interacciones dinámicas con JavaScript
* ✅ Protección contra SQL Injection
* ✅ Manejo de errores y excepciones

---

## 📋 Reglas de negocio implementadas

* Un beneficiario solo puede tener un contrato activo a la vez
* Las penalidades por pago tardío son del 10% del valor de la cuota
* No se pueden eliminar beneficiarios que tengan contratos asociados
* No se pueden eliminar contratos que tengan pagos registrados
* Cada cuota debe pagarse completa (no se permiten pagos parciales)

---

⭐ Desarrollado para ofrecer una solución integral a la gestión de préstamos ⭐