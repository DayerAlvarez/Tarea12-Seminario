# Sistema de Préstamos Web

Sistema para la gestión integral de préstamos, beneficiarios y pagos.

## Instalación

### Clonar Repositorio
```
git clone https://github.com/usuario/prestamos-web
```

### Configurar la base de datos
- Cree una base de datos MySQL llamada `prestamos`
- Importe el script SQL proporcionado

### Configurar conexión a base de datos
Modifique el archivo `app/models/Conexion.php` con los datos de su servidor:
```php
private $host = 'localhost';
private $dbname = 'prestamos';
private $username = 'root';
private $password = '';
```

### Coloque los archivos en un servidor web
- Configure el servidor web para que apunte al directorio raíz del proyecto
- Asegúrese de que PHP 7.4+ esté instalado y configurado

## Base de Datos

```sql
CREATE DATABASE prestamos;
USE prestamos;

CREATE TABLE beneficiarios
(
	idbeneficiario	INT AUTO_INCREMENT PRIMARY KEY,
    apellidos		VARCHAR(50) 		NOT NULL,
    nombres 		VARCHAR(50) 		NOT NULL,
    dni 			CHAR(8) 			NOT NULL,
    telefono 		CHAR(9) 			NOT NULL,
    direccion 		VARCHAR(90) 		NULL,
    creado 			DATETIME 			NOT NULL DEFAULT NOW(),
    modificado 		DATETIME 			NULL,
    CONSTRAINT uk_dni_be UNIQUE (dni)
)ENGINE = INNODB;

CREATE TABLE contratos
(
	idcontrato 		INT AUTO_INCREMENT PRIMARY KEY,
    idbeneficiario  INT 			NOT NULL,
    monto 			DECIMAL(7,2)  	NOT NULL,
    interes 		DECIMAL(5,2)  	NOT NULL,
    fechainicio 	DATE 			NOT NULL,
    diapago 		TINYINT 		NOT NULL,
    numcuotas 		TINYINT 		NOT NULL COMMENT 'Expresado en meses',
    estado 			ENUM('ACT','FIN') NOT NULL DEFAULT 'ACT' COMMENT 'ACT = Activo, FIN = Finalizo',
    creado 			DATETIME 			NOT NULL DEFAULT NOW(),
    modificado 		DATETIME 			NULL,
    CONSTRAINT fk_idbeneficiario_con FOREIGN KEY (idbeneficiario) REFERENCES beneficiarios (idbeneficiario)
)ENGINE = INNODB;

CREATE TABLE pagos
(
	idpago		INT AUTO_INCREMENT PRIMARY KEY,
    idcontrato	INT 			NOT NULL,
    numcuota 	TINYINT 		NOT NULL COMMENT 'Se debe cancelar la cuota en su totalidad sin AMORTIZACIONES',
    fechapago	DATETIME 		NOT NULL COMMENT 'Fecha efectiva de pago',
    monto 		DECIMAL(7,2)	NOT NULL,
    penalidad	DECIMAL(7,2)	NOT NULL DEFAULT 0 COMMENT '10% del valor de la cuota',
    medio 		ENUM('EFC', 'DEP')NOT NULL COMMENT 'EFC = Efectivo, DEP = Depósito',
    CONSTRAINT fk_idcontrato_pag FOREIGN KEY (idcontrato) REFERENCES contratos (idcontrato),
    CONSTRAINT uk_numcuota_pag UNIQUE (idcontrato, numcuota)
)ENGINE = INNODB;
```

## Estructura del Proyecto

```
prestamos-web/
├── app/
│   ├── controllers/      # Controladores del sistema
│   │   ├── beneficiario.controller.php
│   │   ├── contrato.controller.php
│   │   └── pago.controller.php
│   └── models/           # Modelos de datos
│       ├── Beneficiario.php
│       ├── Conexion.php
│       ├── Contrato.php
│       └── Pago.php
├── public/
│   ├── css/              # Estilos CSS
│   │   ├── beneficiario.css
│   │   ├── contrato.css
│   │   ├── main.css
│   │   └── pago.css
│   ├── js/               # Scripts JavaScript
│   │   ├── beneficiario.js
│   │   ├── contrato.js
│   │   └── pago.js
│   └── views/            # Vistas HTML/PHP
│       ├── Beneficiario/
│       │   └── registraryListar.php
│       ├── Contrato/
│       │   └── registraryListar.php
│       └── Pago/
│           └── listar.php
├── index.php             # Punto de entrada
└── README.md
```

## Módulos del Sistema

### Módulo de Beneficiarios
- Gestión de datos personales de clientes
- Validación de DNI (8 dígitos) y teléfono (9 dígitos)
- Operaciones CRUD completas

### Módulo de Contratos
- Creación de contratos de préstamo
- Cálculo automático de cuotas mensuales
- Visualización de cronograma de pagos
- Control de estado de contratos (activo/finalizado)

### Módulo de Pagos
- Registro de pagos de cuotas
- Cálculo automático de penalidades por pagos tardíos (10%)
- Historial de pagos realizados
- Soporte para diferentes medios de pago

## Funcionalidades API (index.php)

### Beneficiarios

**GET**
- `?seccion=beneficiarios` - Mostrar lista de beneficiarios

**POST**
- `?seccion=beneficiarios&action=crear` - Crear nuevo beneficiario
- `?seccion=beneficiarios&action=actualizar` - Actualizar beneficiario existente

**DELETE**
- `?seccion=beneficiarios&action=eliminar&id=:id` - Eliminar beneficiario

### Contratos

**GET**
- `?seccion=contratos` - Mostrar lista de contratos
- `?seccion=contratos&action=buscar_beneficiario&dni=:dni` - Buscar beneficiario por DNI
- `?seccion=contratos&action=cronograma&id=:id` - Obtener cronograma de pagos

**POST**
- `?seccion=contratos&action=crear` - Crear nuevo contrato
- `?seccion=contratos&action=actualizar` - Actualizar contrato existente

**PUT/POST**
- `?seccion=contratos&action=finalizar&id=:id` - Finalizar contrato

**DELETE**
- `?seccion=contratos&action=eliminar&id=:id` - Eliminar contrato

### Pagos

**GET**
- `?seccion=pagos` - Mostrar lista de pagos realizados
- `?seccion=pagos&action=buscar_contrato&dni=:dni` - Buscar contrato por DNI del beneficiario

**POST**
- `?seccion=pagos&action=registrar` - Registrar nuevo pago

## Validaciones Implementadas

### Beneficiarios
- DNI debe tener exactamente 8 dígitos numéricos
- Teléfono debe tener exactamente 9 dígitos numéricos
- No se pueden eliminar beneficiarios con contratos asociados

### Contratos
- El monto del préstamo debe ser mayor que cero
- El interés debe estar entre 0 y 100%
- La fecha de inicio no puede ser anterior a la fecha actual
- El día de pago debe estar entre 1 y 31
- El número de cuotas debe ser entre 1 y 255
- Un beneficiario solo puede tener un contrato activo a la vez
- No se pueden actualizar contratos finalizados
- No se pueden eliminar contratos con pagos registrados

### Pagos
- No se pueden registrar pagos parciales de cuotas
- Penalidad automática del 10% para pagos tardíos
- El medio de pago debe ser efectivo (EFC) o depósito (DEP)
- No se puede registrar más de un pago para la misma cuota

## Ejemplos de Uso

### Registro de Beneficiario
```json
{
  "apellidos": "Pérez López",
  "nombres": "Juan Carlos",
  "dni": "47123456",
  "telefono": "987654321",
  "direccion": "Av. Principal 123"
}
```

### Creación de Contrato
```json
{
  "idbeneficiario": 1,
  "monto": 5000.00,
  "interes": 5.00,
  "fechainicio": "2023-05-15",
  "diapago": 15,
  "numcuotas": 12
}
```

### Registro de Pago
```json
{
  "idpago": 5,
  "medio": "EFC"
}
```

## Reglas de Negocio

1. **Beneficiarios**
   - El DNI es único en el sistema
   - La dirección es opcional, los demás campos son obligatorios

2. **Contratos**
   - Un beneficiario solo puede tener un contrato activo a la vez
   - Las cuotas se calculan automáticamente con el sistema de amortización francés
   - La fecha de inicio debe ser igual o posterior a la fecha actual

3. **Pagos**
   - Las cuotas deben pagarse completas (sin amortizaciones parciales)
   - Pagos realizados después de la fecha de vencimiento generan una penalidad del 10%
   - Se registra la fecha efectiva de pago automáticamente